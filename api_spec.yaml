openapi: 3.0.0
info:
  title: Solver Management API
  version: 1.0.0
  description: API for managing solvers

paths:
  /solvers:
    get:
      summary: Get all solvers
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

    post:
      summary: Create a new solver
      requestBody:
        required: true
        content:
          application/json: {}

      responses:
        "201":
          description: Solver created successfully
          content:
            application/json: {}

  /solvers/{solverId}:
    parameters:
      - name: solverId
        in: path
        required: true
        schema:
          type: integer
        description: ID of the solver

    get:
      summary: Get a specific solver
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
        "404":
          description: Solver not found
          content:
            application/json: {}

    put:
      summary: Update a solver
      requestBody:
        required: true
        content:
          application/json: {}

      responses:
        "200":
          description: Solver updated successfully
          content:
            application/json: {}
        "404":
          description: Solver not found
          content:
            application/json: {}

    delete:
      summary: Delete a solver
      responses:
        "204":
          description: Solver deleted successfully
        "404":
          description: Solver not found
          content:
            application/json: {}

  /models:
    get:
      summary: Get all models
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}

    post:
      summary: Create a new model
      requestBody:
        required: true
        content:
          application/json: {}

      responses:
        "201":
          description: Model created successfully
          content:
            application/json: {}

  /models/{modelId}:
    parameters:
      - name: modelId
        in: path
        required: true
        schema:
          type: integer
        description: ID of the model

    get:
      summary: Get a specific model
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
        "404":
          description: Model not found
          content:
            application/json: {}

    put:
      summary: Update a model
      requestBody:
        required: true
        content:
          application/json: {}

      responses:
        "200":
          description: Model updated successfully
          content:
            application/json: {}
        "404":
          description: Model not found
          content:
            application/json: {}

    delete:
      summary: Delete a model
      responses:
        "204":
          description: Model deleted successfully
        "404":
          description: Model not found
          content:
            application/json: {}
